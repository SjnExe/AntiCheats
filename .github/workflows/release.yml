name: Release mcaddon

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag
      shell: bash
      run: |
        RAW_TAG_NAME="${{ github.ref_name }}"
        echo "FULL_TAG_NAME=$RAW_TAG_NAME" >> $GITHUB_ENV
        # Remove 'v' prefix for version string
        VERSION_STR="${RAW_TAG_NAME#v}"
        echo "VERSION_STRING=$VERSION_STR" >> $GITHUB_ENV
        # Convert version string "1.2.3" to array string "[1,2,3]"
        VERSION_ARR_STR="[$(echo $VERSION_STR | tr '.' ',')]"
        echo "VERSION_ARRAY_STRING=$VERSION_ARR_STR" >> $GITHUB_ENV
        echo "Full tag: $RAW_TAG_NAME, Version string: $VERSION_STR, Version array string: $VERSION_ARR_STR"

    - name: Create staging directory
      run: mkdir staging

    - name: Copy addon folders to staging
      run: |
        cp -r BP staging/
        cp -r RP staging/

    - name: Replace placeholders in staged JSON files
      shell: bash
      env:
        VERSION_STRING: ${{ env.VERSION_STRING }}
        VERSION_ARRAY_STRING: ${{ env.VERSION_ARRAY_STRING }}
      run: |
        echo "Replacing placeholders in staged files..."
        echo "Replacing placeholders in staged files..."
        echo "VERSION_STRING: ${VERSION_STRING}"
        echo "VERSION_ARRAY_STRING: ${VERSION_ARRAY_STRING}"

        # Replace __VERSION_STRING__ placeholder in JSONs
        find staging -type f -name "*.json" -exec sed -i "s/__VERSION_STRING__/${VERSION_STRING}/g" {} +

        # Replace "__VERSION_ARRAY__" placeholder in JSONs
        # This replaces the JSON string ""__VERSION_ARRAY__"" with the array string like [1,2,3]
        find staging -type f -name "*.json" -exec sed -i "s/\"__VERSION_ARRAY__\"/${VERSION_ARRAY_STRING}/g" {} +

        echo "Contents of staged BP manifest after replacement:"
        cat "staging/BP/manifest.json"
        echo "Contents of staged RP manifest after replacement:"
        cat "staging/RP/manifest.json"

        # Replace __VERSION_STRING__ placeholder in config.ts
        CONFIG_TS_PATH="staging/BP/scripts/config.ts"
        if [ -f "$CONFIG_TS_PATH" ]; then
          echo "Replacing __VERSION_STRING__ in $CONFIG_TS_PATH"
          sed -i "s/__VERSION_STRING__/${VERSION_STRING}/g" "$CONFIG_TS_PATH"
          echo "Contents of $CONFIG_TS_PATH after replacement:"
          cat "$CONFIG_TS_PATH"
        else
          echo "Warning: $CONFIG_TS_PATH not found."
        fi

    - name: Zip addon
      shell: bash
      env:
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      run: |
        cd staging
        zip -r "../AC.${{ env.FULL_TAG_NAME }}.mcaddon" ./*
        cd ..

    - name: Zip Behavior Pack
      shell: bash
      env:
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      run: |
        cd staging/BP
        zip -r "../../AC BP${{ env.FULL_TAG_NAME }}.mcpack" ./*
        cd ../..

    - name: Upload Behavior Pack Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./AC BP${{ env.FULL_TAG_NAME }}.mcpack
        asset_name: AC BP${{ env.FULL_TAG_NAME }}.mcpack
        asset_content_type: application/zip

    - name: Zip Resource Pack
      shell: bash
      env:
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      run: |
        cd staging/RP
        zip -r "../../AC RP${{ env.FULL_TAG_NAME }}.mcpack" ./*
        cd ../..

    - name: Upload Resource Pack Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./AC RP${{ env.FULL_TAG_NAME }}.mcpack
        asset_name: AC RP${{ env.FULL_TAG_NAME }}.mcpack
        asset_content_type: application/zip

    - name: Upload Mcaddon Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./AC.${{ env.FULL_TAG_NAME }}.mcaddon
        asset_name: AC.${{ env.FULL_TAG_NAME }}.mcaddon
        asset_content_type: application/zip
