name: Release mcaddon
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Extract version from tag
        shell: bash
        run: |
          set -e
          RAW_TAG_NAME="${{ github.ref_name }}"
          echo "FULL_TAG_NAME=$RAW_TAG_NAME" >> $GITHUB_ENV
          VERSION_STR="${RAW_TAG_NAME#v}"
          echo "VERSION_STRING=$VERSION_STR" >> $GITHUB_ENV
          VERSION_ARR_STR="[$(echo "$VERSION_STR" | tr '.' ',')]"
          echo "VERSION_ARRAY_STRING=$VERSION_ARR_STR" >> $GITHUB_ENV
          echo "Full tag: $RAW_TAG_NAME, Extracted version string: $VERSION_STR, Resulting version array string: $VERSION_ARR_STR"

      - name: Create staging directory and copy addon folders
        run: |
          set -e
          mkdir staging
          cp -r AddonExeBP staging/
          cp -r AddonExeRP staging/

      - name: Replace placeholders in staged files
        shell: bash
        env:
          VERSION_STRING: ${{ env.VERSION_STRING }}
          VERSION_ARRAY_STRING: ${{ env.VERSION_ARRAY_STRING }}
        run: |
          set -e
          echo "--- Starting Placeholder Replacement ---"
          BP_MANIFEST="staging/AddonExeBP/manifest.json"
          RP_MANIFEST="staging/AddonExeRP/manifest.json"
          CONFIG_JS_PATH="staging/AddonExeBP/scripts/config.js"

          # Replace in JSON files
          find staging -type f -name "*.json" -exec sed -i "s/v__VERSION_STRING__/v${VERSION_STRING}/g" {} +
          find staging -type f -name "*.json" -exec sed -i "s/\"__VERSION_ARRAY__\"/${VERSION_ARRAY_STRING}/g" {} +

          # Replace in JS config
          sed -i "s/v__VERSION_STRING__/v${VERSION_STRING}/g" "$CONFIG_JS_PATH"

          echo "--- Verification ---"
          echo "BP Manifest:"
          cat "$BP_MANIFEST"
          echo "RP Manifest:"
          cat "$RP_MANIFEST"
          echo "Config.js:"
          head -n 15 "$CONFIG_JS_PATH"
          echo "--- End Verification ---"

      - name: Create Release Archives
        shell: bash
        env:
          FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
        run: |
          set -e
          # Create main .mcaddon
          (cd staging && zip -r "../AddonExe.${FULL_TAG_NAME}.mcaddon" ./*)

          # Create BP .mcpack
          (cd staging/AddonExeBP && zip -r "../../AddonExe.BP${FULL_TAG_NAME}.mcpack" ./*)

          # Create RP .mcpack
          (cd staging/AddonExeRP && zip -r "../../AddonExe.RP${FULL_TAG_NAME}.mcpack" ./*)
          echo "Created release archives."

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            ./AddonExe.${{ env.FULL_TAG_NAME }}.mcaddon
            ./AddonExe.BP${{ env.FULL_TAG_NAME }}.mcpack
            ./AddonExe.RP${{ env.FULL_TAG_NAME }}.mcpack
