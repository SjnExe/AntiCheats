name: Release mcaddon

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag
      shell: bash
      run: |
        RAW_TAG_NAME="${{ github.ref_name }}"
        echo "FULL_TAG_NAME=$RAW_TAG_NAME" >> $GITHUB_ENV
        # Remove 'v' or 'V' prefix for version string
        if [[ "$RAW_TAG_NAME" == v* ]]; then
          VERSION_STR="${RAW_TAG_NAME#v}"
        elif [[ "$RAW_TAG_NAME" == V* ]]; then
          VERSION_STR="${RAW_TAG_NAME#V}"
        else
          VERSION_STR="$RAW_TAG_NAME"
        fi
        echo "VERSION_STRING=$VERSION_STR" >> $GITHUB_ENV
        echo "Extracted VERSION_STRING: $VERSION_STR"
        # Convert version string "1.2.3" to array string "[1,2,3]"
        if [ -z "$VERSION_STR" ]; then
          echo "Warning: VERSION_STRING is empty. VERSION_ARRAY_STRING will be '[]'."
          VERSION_ARR_STR="[]"
        else
          VERSION_ARR_STR="[$(echo "$VERSION_STR" | tr '.' ',')]"
        fi
        echo "VERSION_ARRAY_STRING=$VERSION_ARR_STR" >> $GITHUB_ENV
        echo "Full tag: $RAW_TAG_NAME, Extracted version string: $VERSION_STR, Resulting version array string: $VERSION_ARR_STR"

    - name: Create staging directory
      run: mkdir staging

    - name: Copy addon folders to staging
      run: |
        cp -r AntiCheatsBP staging/
        cp -r AntiCheatsRP staging/

    - name: Replace placeholders in staged JSON files
      shell: bash
      env:
        VERSION_STRING: ${{ env.VERSION_STRING }}
        VERSION_ARRAY_STRING: ${{ env.VERSION_ARRAY_STRING }}
      run: |
        echo "--- Starting Placeholder Replacement ---"
        echo "Using VERSION_STRING: '${VERSION_STRING}' (prefixed with 'v' for replacement: 'v${VERSION_STRING}')"
        echo "Using VERSION_ARRAY_STRING: '${VERSION_ARRAY_STRING}'"

        JSON_FILES=$(find staging -type f -name "*.json")
        if [ -z "$JSON_FILES" ]; then
          echo "No JSON files found in staging directory. Skipping JSON placeholder replacements."
        else
          echo "Found JSON files for processing: $JSON_FILES"
          echo "Processing JSON files for 'v__VERSION_STRING__' replacement..."
          find staging -type f -name "*.json" -exec sed -i "s/v__VERSION_STRING__/v${VERSION_STRING}/g" {} +
          echo "Completed 'v__VERSION_STRING__' replacement in JSON files."

          echo "Processing JSON files for '__VERSION_ARRAY__' replacement..."
          # This replaces the JSON string ""__VERSION_ARRAY__"" with the array string like [1,2,3]
          find staging -type f -name "*.json" -exec sed -i "s/\"__VERSION_ARRAY__\"/${VERSION_ARRAY_STRING}/g" {} +
          echo "Completed '__VERSION_ARRAY__' replacement in JSON files."
        fi

        echo "--- Verification of Manifest Files ---"
        BP_MANIFEST="staging/AntiCheatsBP/manifest.json"
        RP_MANIFEST="staging/AntiCheatsRP/manifest.json"

        if [ -f "$BP_MANIFEST" ]; then
          echo "Contents of staged BP manifest ($BP_MANIFEST) after replacement:"
          cat "$BP_MANIFEST"
        else
          echo "Warning: BP Manifest ($BP_MANIFEST) not found."
        fi

        if [ -f "$RP_MANIFEST" ]; then
          echo "Contents of staged RP manifest ($RP_MANIFEST) after replacement:"
          cat "$RP_MANIFEST"
        else
          echo "Warning: RP Manifest ($RP_MANIFEST) not found."
        fi
        echo "--- End Manifest Verification ---"

        CONFIG_JS_PATH="staging/AntiCheatsBP/scripts/config.js"
        echo "Processing config.js for 'v__VERSION_STRING__' replacement..."
        if [ -f "$CONFIG_JS_PATH" ]; then
          echo "Found config.js at $CONFIG_JS_PATH. Replacing 'v__VERSION_STRING__' with 'v${VERSION_STRING}'."
          sed -i "s/v__VERSION_STRING__/v${VERSION_STRING}/g" "$CONFIG_JS_PATH"
          echo "Contents of $CONFIG_JS_PATH after replacement (first 15 lines):"
          head -n 15 "$CONFIG_JS_PATH" # Show only first few lines to avoid overly long logs
          echo "--- End config.js Verification ---"
        else
          echo "Warning: $CONFIG_JS_PATH not found. Cannot replace version string."
        fi
        echo "--- Placeholder Replacement Finished ---"

    - name: Zip addon
      shell: bash
      env:
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      run: |
        cd staging
        zip -r "../AC.${{ env.FULL_TAG_NAME }}.mcaddon" ./*
        cd ..

    - name: Zip Behavior Pack
      shell: bash
      env:
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      run: |
        cd staging/AntiCheatsBP
        zip -r "../../AC BP${{ env.FULL_TAG_NAME }}.mcpack" ./*
        cd ../..

    - name: Upload Behavior Pack Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./AC BP${{ env.FULL_TAG_NAME }}.mcpack
        asset_name: AC BP${{ env.FULL_TAG_NAME }}.mcpack
        asset_content_type: application/zip

    - name: Zip Resource Pack
      shell: bash
      env:
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      run: |
        cd staging/AntiCheatsRP
        zip -r "../../AC RP${{ env.FULL_TAG_NAME }}.mcpack" ./*
        cd ../..

    - name: Upload Resource Pack Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./AC RP${{ env.FULL_TAG_NAME }}.mcpack
        asset_name: AC RP${{ env.FULL_TAG_NAME }}.mcpack
        asset_content_type: application/zip

    - name: Upload Mcaddon Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_TAG_NAME: ${{ env.FULL_TAG_NAME }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./AC.${{ env.FULL_TAG_NAME }}.mcaddon
        asset_name: AC.${{ env.FULL_TAG_NAME }}.mcaddon
        asset_content_type: application/zip
